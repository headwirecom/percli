#!/usr/bin/env node

const args = require('commander')
const { stopPeregrine, setPort, getPathForServer }  = require('../lib/tasks')
const { peregrineBanner } = require('../lib/banner.js')

const fs = require('fs')
const path = require('path')

args.version(require('../package.json').version)
    .option('-n, --name [name]', 'start server by name')
    .parse(process.argv)

async function serverStop(type){
	await peregrineBanner()
	stopPeregrine()
}

if(typeof args.name === 'string') {
    const serverPath = getPathForServer(args.name)

    if(serverPath) {
        try {
            let port = 8080
            const file = fs.readFileSync(path.join(serverPath, 'sling', 'sling.properties')).toString()
            lines = file.split(/[\n\r]/)
            for(let i = 0; i < lines.length; i++) {
                if(lines[i].startsWith('org.osgi.service.http.port=')) {
                    const prop = lines[i].split('=')
                    port = prop[1]
                }
            }
            setPort(port)
            process.chdir(serverPath)
            serverStop()
        } catch(err) {
            console.error('server at path',serverPath,'does not exist')
        }
    } else {
        console.error('no server found with name', args.name)
    }
}
else {
    serverStop()
}

